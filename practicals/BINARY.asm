.MODEL SMALL
.386
.STACK 100H
.DATA
    ARR DW 05H, 11H, 120H, 1000H,1378H,4382H,7896H
    SR EQU 1000H
    MSG DB "FOUND AT $"
    MSG1 DB "NOT FOUND $"
.CODE
    MAIN PROC FAR
    MOV AX,@DATA
    MOV DS,AX
    MOV CX,SR  ;ASSUMING CX IS OUR VALUE TO BE SEARCHED
    MOV BX,00H ;ASSUMING BX IS OUR LOW 
    MOV DX,06H ;ASSUMING DX IS OUR HIGH

    LP: CMP BX,DX ;CHECKING WHETHER LOW IS GREATER THAN HIGH
    JA FAILURE    ;IF LOW IS BIGGER THAN HIGH THEN GO TO FAILURE ELSE MOVE TO NEXT 
    MOV AX,BX     ;NOW WE WILL FIND MID 
    ADD AX,DX     ;ADDING BX AND DX
    SHR AX,01     ;DIVIDING BY 2
    MOV SI,AX     ;STORING INTO SI     
    ADD SI,SI     ;MULTIPLYING BY 2
    CMP CX,ARR[SI];COMPARING SEARCH VALUE WITH MID 
    JAE BIGGER    ;IF SEARCH VALUE IS BIGGER OR EQUAL THAN MID JUMP TO BIGGER
    DEC AX        ;ELSE DECREMENT MID 
    MOV DX,AX     ;STORE MID -1 TO HIGH (DX)
    JMP LP        ;AGAIN GO TO LP
    
    BIGGER: 
    JE SUCCESS   ;IF EQUAL GO TO SUCCESS
    INC AX       ;ELSE STORE MID+1 INTO AL
    MOV BX,AX    ;STORE MID+1 INTO LOW(BX)
    JMP LP       ;AGAIN GO TO LP

    SUCCESS: 
    ADD AL,30H   ;CONVERTING TO ASCII
    LEA DX,MSG
    MOV AH,09H
    INT 21H
    MOV DL,AL
    MOV AH,6H
    INT 21H
    JMP EXIT
    
    FAILURE: 
    LEA DX,MSG1
    MOV AH,09H
    INT 21H

    EXIT: 
    MOV AH,4CH
    INT 21H        
    MAIN ENDP
END MAIN